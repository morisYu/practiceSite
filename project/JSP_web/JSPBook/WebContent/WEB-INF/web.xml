<?xml version="1.0" encoding="UTF-8"?>
<web-app>
	<!-- 시큐리티 역할을 설정 -->
	<security-role>
		<role-name>role1</role-name>
	</security-role>
	
	<!-- 시큐리티 제약 사항을 설정 -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>JSPBook</web-resource-name>
			
			<!-- 접근을 제한할 요청 경로를 설정 -->
			<url-pattern>/ch10/security02.jsp</url-pattern>
			<http-method>GET</http-method>
		</web-resource-collection>
		<auth-constraint>
			<description></description>
			
			<!-- 권한이 부여된 사용자 이름을 설정 -->
			<role-name>role1</role-name>
		</auth-constraint>
	</security-constraint>
	
	<!-- 시큐리티 인증을 설정 -->
	<login-config>
		<!-- BASIC 인증 처리 기법을 설정 -->
		<!--
		<auth-method>BASIC</auth-method>
		-->
		
		<!-- 폼 기반 인증 처리 기법을 설정 -->
		<auth-method>FORM</auth-method>
		<form-login-config>
			<form-login-page>/ch10/login.jsp</form-login-page>
			<form-error-page>/ch10/login_failed.jsp</form-error-page>
		</form-login-config>
	</login-config>
	
	<!-- 오류가 발생했을 때 오류 상태와 오류 페이지를 출력 -->
	
	<!-- 에러코드 500 오류가 발생했을 때 오류 상태와 오류 페이지를 출력 -->
	<!-- 에러코드 500: 서버 내부의 에러(JSP에서 예외가 발생하는 경우) -->
	<error-page>
		<error-code>500</error-code>
		<location>/ch11/errorCode_error.jsp</location>
	</error-page>
	
	<!-- 예외 유형에 따른 오류 페이지 출력 -->
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/ch11/exceptionType_error.jsp</location>
	</error-page>
	
	<!-- 파일 필터 구성 -->
	<filter>
		<filter-name>Filter01</filter-name>
		<filter-class>ch12.com.filter.AuthenFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>Filter01</filter-name>
		<url-pattern>/ch12/filter01_process.jsp</url-pattern>
	</filter-mapping>
	
	<!-- 파일 필터 추가 -->
	<filter>
		<filter-name>Filter02</filter-name>
		<filter-class>ch12.com.filter.InitParamFilter</filter-class>
		<init-param>
			<param-name>param1</param-name>
			<param-value>admin</param-value>
		</init-param>
		<init-param>
			<param-name>param2</param-name>
			<param-value>1234</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Filter02</filter-name>
		<url-pattern>/ch12/filter02_process.jsp</url-pattern>
	</filter-mapping>

	<!-- 파일 필터 추가 -->
	<filter>
		<filter-name>Filter03</filter-name>
		<filter-class>ch12.com.filter.LogFileFilter</filter-class>
		<init-param>
			<param-name>filename</param-name>
			
			<!-- 변수 값과 일치하는 경로(logs 폴더)가 c드라이브에 있어야 함 -->
			<!-- monitor.log 파일은 없으면 LogFileFilter.java 에서 새로 생성함 -->
			<param-value>c:\\logs\\monitor.log</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Filter03</filter-name>
		<url-pattern>/ch12/filter03_process.jsp</url-pattern>
	</filter-mapping>
	
</web-app>
























